name: Infrastructure CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'bootstrap-backend/**'
      - 'gke-infra/**'
      - 'infra/terraform/**'
      - '.github/workflows/infra-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'bootstrap-backend/**'
      - 'gke-infra/**'
      - 'infra/terraform/**'

env:
  TF_VERSION: "1.6.0"
  TF_LOG: INFO
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
  security-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          soft_fail: true
          framework: terraform
          output_format: sarif
          output_file_path: checkov-results.sarif
          baseline: .checkov.baseline
      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
      - uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: .
          format: sarif
          soft_fail: true
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-iac-results.sarif'

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: security-scan
    strategy:
      matrix:
        environment: [dev, stage, prod]
        module: [bootstrap-backend, gke-infra]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Terraform Init
        run: |
          cd ${{ matrix.module }}
          terraform init -input=false
      - name: Terraform Validate
        run: |
          cd ${{ matrix.module }}
          terraform validate
      - name: Terraform Format Check
        run: |
          cd ${{ matrix.module }}
          terraform fmt -check=true -diff=true
      - name: Terraform Plan
        run: |
          cd ${{ matrix.module }}
          if [ "${{ matrix.module }}" = "gke-infra" ]; then
            terraform workspace select ${{ matrix.environment }} || terraform workspace new ${{ matrix.environment }}
            terraform plan -var-file="environments/${{ matrix.environment }}.tfvars" -input=false -out=tfplan
          else
            terraform plan -input=false -out=tfplan
          fi
          terraform show -no-color tfplan > tfplan.txt
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ matrix.module }}-${{ matrix.environment }}
          path: ${{ matrix.module }}/tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    strategy:
      matrix:
        environment: [dev]
        module: [bootstrap-backend, gke-infra]
    environment: ${{ matrix.environment }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - uses: actions/download-artifact@v3
        with:
          name: tfplan-${{ matrix.module }}-${{ matrix.environment }}
          path: ${{ matrix.module }}
      - name: Terraform Init
        run: |
          cd ${{ matrix.module }}
          terraform init -input=false
      - name: Terraform Apply
        run: |
          cd ${{ matrix.module }}
          if [ "${{ matrix.module }}" = "gke-infra" ]; then
            terraform workspace select ${{ matrix.environment }}
          fi
          terraform apply -input=false tfplan
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: |
            Infrastructure deployment completed
            Module: ${{ matrix.module }}
            Environment: ${{ matrix.environment }}
            Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}